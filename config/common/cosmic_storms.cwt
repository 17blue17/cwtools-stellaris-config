# to do
#<cosmic_storm_mission>
#<cosmic_storm_mission_counter>
#<event.cosmicstorm>
#<event.cosmicstorminfluence>


types = {
	type[storm_type] = {
		path = "game/common/storm_types"
	}
	type[cosmic_storm_mission] = {
		path = "game/common/missions"
	}
}

storm_type = {
	## cardinality = 0..1
	affect_hp_regen = yes
	## cardinality = 0..1
	affect_armor_regen = yes
	## cardinality = 0..1
	affect_shield_regen = yes
	## cardinality = 0..1
	occlude_system = yes
	
	## cardinality = 0..1
	spawn_weight = float
	## cardinality = 0..1
	## replace_scope = { this = country root = country }
	spawn_weight = {
		base = float
		modifier = {
			set = int
			alias_name[trigger] = alias_match_left[trigger]
		}
	}

	description = localisation
	
	## cardinality = 0..1
	custom_tooltip = localisation

	## cardinality = 0..inf
	alias_name[triggered_planet_modifier_planet] = alias_match_left[triggered_planet_modifier_planet]
	## cardinality = 0..inf
	alias_name[triggered_fleet_modifier_fleet] = alias_match_left[triggered_fleet_modifier_fleet]
	## cardinality = 0..inf
	alias_name[triggered_ship_modifier] = alias_match_left[triggered_ship_modifier]
	## cardinality = 0..inf
	alias_name[triggered_system_modifier_starbase] = alias_match_left[triggered_system_modifier]

	## replace_scope = { this = cosmic_storm root = cosmic_storm }
	on_start = {
		## cardinality = 0..inf	
		alias_name[effect] = alias_match_left[effect]
	}
	
	## replace_scope = { this = cosmic_storm root = cosmic_storm }	
	on_moved = {
		## cardinality = 0..inf	
		alias_name[effect] = alias_match_left[effect]
	}

	## replace_scope = { this = cosmic_storm root = cosmic_storm }	
	on_finished = {
		## cardinality = 0..inf	
		alias_name[effect] = alias_match_left[effect]
	}

	cosmic_storm_texture_path = filepath
	cosmic_storm_texture_color_path = filepath
	cosmic_storm_event_sprite = <sprite>
	icon = <sprite>

	cosmic_storm_texture_lightning_paths = {
		filepath
		filepath
		filepath
		filepath
	}

	cosmic_storm_galaxy_lightning_time = float
	cosmic_storm_galaxy_max_opacity = float
	
	## replace_scope = { this = country root = country }	
	## cardinality = 0..inf	
	show_notification = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	
}

