types = {
	type[astral_rift] = {
		path = "game/common/astral_rift"
		subtype[scripted] = {
			connection_type = scripted_connection
		}
	}
	type[astral_action] = {
		path = "game/common/astral_actions"
	}
}

astral_rift = {
	### the localization key used in triggers and effects for the type
	name = localisation
	## cardinality = 0..1
	randomized = bool
	## cardinality = 0..1
	## severity = warning
	flags = {
		## cardinality = 0..inf
		value_set[astral_rift_flag]
	}
	## cardinality = 0..1
	event = <event.astral>
	## cardinality = 0..1
	on_roll_failed = {
		enum[astral_rift_on_roll_failed] = bool
	}
	## cardinality = 0..inf
	event_weight = {
		weight = float
		## cardinality = 0..inf
		modifier = {
			## cardinality = 0..1
			factor = int
			## cardinality = 0..inf
			## replace_scope = { root = country this = country }
			alias_name[trigger] = alias_match_left[trigger]
		}
	}

}

enums = {
	enum[astral_rift_on_roll_failed] = {
		standard_astral_rift_on_roll_failed
	}
}

## push_scope = country
astral_action = {
	## cardinality = 0..1
	sound = <sound_effect>
	## cardinality = 0..1
	unlock_threshold = int
	## cardinality = 0..1
	usages = int
	## cardinality = 0..1
	custom_usage_tooltip = localisation
	## cardinality = 0..1
	upgrade = <astral_action>

	## cardinality = 0..1
	activation_cost = {
		alias_name[economic_template] = alias_match_left[economic_template]
	}

	## cardinality = 0..1
	cooldown = int
	## cardinality = 0..1
	uses_custom_cooldown = yes

	picture = <sprite>

	## cardinality = 0..1
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	allow_unlock = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	is_exhausted = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	effect = {
		alias_name[effect] = alias_match_left[effect]
	}

	## cardinality = 0..1
	ai_weight = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}
