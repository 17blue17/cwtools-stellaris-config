
types = {
	type[deposit] = {
		#does this work?
		## push_scope = planet
		path = "game/common/deposits"
		
		#some guesswork here...
		subtype[colonisable] = {
			is_for_colonizeable = yes
		}
		subtype[orbital] = {
			station = scalar
		}
		subtype[blocker] = {
			time = int
		}
	}
	type[district] = {
		## push_scope = planet
		path = "game/common/districts"
	}
}

enums = {
	enum[resource_list_categories_deposits] = {
		deposit_blockers
		orbital_mining_deposits
	}
	enum[deposit_categories] = {
		deposit_cat_minerals
	}
}


alias[economic_template:cost] = {
	## cardinality = 0..1
	trigger = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 1..inf
	<resource> = int
}

alias[economic_template:produces] = {
	## cardinality = 0..1
	trigger = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 1..inf
	<resource> = int
}

alias[economic_template:upkeep] = {
	## cardinality = 0..1
	trigger = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 1..inf
	<resource> = int
}


alias[triggered_planet_modifier:triggered_planet_modifier] = {
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}
}

alias[triggered_desc:triggered_desc] = {
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	text = localisation
}



#deposits/planetary features

deposit = {
	is_for_colonizeable = bool
	use_for_min_max_adjustments = bool
		
	#blocker?
	## cardinality = 0..1
	icon = <sprite>
  
	subtype[blocker] = {
		time = int
		on_cleared = {
			alias_name[effect] = alias_match_left[effect]
		}
	}

	subtype[colonisable] = {
		planet_modifier = {
			alias_name[modifier] = alias_match_left[modifier]
		}
		## cardinality = 0..1
		use_weights_for_terraforming_swap_types = bool
		## cardinality = 0..1
		should_swap_deposit_on_terraforming = bool
		## cardinality = 0..1
		terraforming_swap_types = {
			<deposit>
		}
		
		category = enum[deposit_categories]
	}

	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
  
	## cardinality = 0..1
	drop_weight = {
		weight = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
	
	subtype[orbital] = {
		station = shipclass_mining_station
	}
	
	## cardinality = 0..1
	resources = {
		subtype[!blocker] = {
			#how much do these matter? Do they determine what economic_template stuff can be used?
			category = enum[resource_list_categories]
		}
		subtype[blocker] = {
			category = deposit_cat_blockers
		}
		
		alias_name[economic_template] = alias_match_left[economic_template]
		
		#to be analysed whether you can have cost, upkeep, produces everywhere
#		subtype[!blocker] = {
#			## cardinality = 0..0
#			cost = {
#			}
#		}
	}
}




district = {
	base_buildtime = int
  
	min_for_deposits_on_planet = int
	max_for_deposits_on_planet = int

	show_on_uncolonized = {
		alias_name[trigger] = alias_match_left[trigger]
	}
  
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
  
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}
  
	prerequisites = {
		## cardinality = 0..inf
		<technology>
	}

	conversion_ratio = int
	convert_to = {
		<district>
	}
  
	resources = {
		category = planet_districts
		alias_name[economic_template] = alias_match_left[economic_template]
	}
  
	planet_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}
  
	alias_name[triggered_planet_modifier] = alias_match_left[triggered_planet_modifier]
	alias_name[triggered_desc] = alias_match_left[triggered_desc]

	ai_weight = {
		weight = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	ai_resource_production = {
		<resource> = int
		trigger = {
			alias_name[trigger] = alias_match_left[trigger]
		}
	}
}

