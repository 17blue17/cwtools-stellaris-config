types = {
	type[prescripted_country] = {
		path = "game/prescripted_countries"
	}
}

prescripted_country = {
	name = localisation
	adjective = <localisation_synced>
	spawn_enabled = bool # yes / no / always ---> this one receives always as well! 
	ignore_portrait_duplication = bool
	
	ship_prefix = <localisation_synced>
	
	species = {
		class = <species_class>
		portrait = <portrait>
		name = <localisation_synced>
		plural = <localisation_synced>
		adjective = <localisation_synced>
		name_list = <name_list>
		## cardinality = 0..inf
    trait = <trait>
	}
	
	room = <asset_selector> #this one is defined under gfx/enviornments/asset_selectors
	
	authority = <authority>
	civics = { 
    ## cardinality = 2..2
    <civic>
   }
	government = <government>
	
	ethic = <ethic>
	ethic = <ethic> #can probably also receive random!
  
	flags = { 
    ## cardinality = 0..inf
    scalar #this is a countryflag string, can be anything.     
  }
	
	planet_name = <localisation_synced>
	planet_class = <planet_class> #should be colonizable of course!
	initializer = <solar_system_initializer>
	system_name = <localisation_synced>
	
	graphical_culture = <graphical_culture>
	city_graphical_culture =  <graphical_culture> #obviously there is some difference with the one above, but im not sure - should check this connection. 
	
	empire_flag = {
		icon= {
			category = scalar #this isn't really scalar, I think the category is the folder name! example: "human" refers to game/flags/human
			file = filepath #example: "flag_human_9.dds"
		}
		background= {
			category = scalar #this isn't really scalar, I think the category is the folder name! example: "backgrounds" refers to game/flags/backgrounds
			file = filepath #example: "00_solid.dds"
		}
		colors={
			## cardinality = 0..4
      <color_define>
			## cardinality = 0..4
      "null"			
		}
	}
	
	ruler = {
		name = <localisation_synced>
		gender = enum[gender]
		portrait = <portrait>
		texture = int 
		hair = int
		clothes = int
	}
}  
