types = { #these are all connected. I added the others so whoever does these in the end knows where to look.
	type[name_list] = {
		path = "game/common/name_lists"
	}
	type[species_name] = {
		path = "game/common/species_names"
	}	
	## type_key_filter = empire_name_parts_list
	type[random_empire_name_part] = {
		path = "game/common/random_names"
	}	
	## type_key_filter = empire_name_format
	type[random_empire_name_format] = {
		path = "game/common/random_names"
	}			
}

### Define possible parts of empire name here, such as "Glorious Empire of". When generating random name for empire, format can refer to it via <key> and pick random part.
random_empire_name_part = {
	### Unique ID by which list can be referred to from name format via <key>. 
	key = scalar
	### List of possible parts. Random weights to the right are optional
	parts = {
		## cardinality = 0..inf
		scalar = int
		## cardinality = 0..inf
		scalar
	}
}

### This block contains rules for picking a specific name format
random_empire_name_format = {
	## replace_scope = { root = country this = country }
	### Conditional weight for choosing this format
	random_weight = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	### Reference to localisation string for generating random name
	format = localisation_synced
	### String used to determine prefix for empire's ship. (Default being ISS). Usually matches name format. Optional for countries that would not ever have ships, e. g. Primitives.
	prefix_format = scalar
	### Not quite clear what it does. Matches [] string retreival in game format. If you know what it does, please contact CW Tools developer Dayshine.
	noun = scalar
}
