type[component_template] = {
	name_field = "name"
	path = "game/common/component_templates"
	subtype[utility_component_template] = {
	}
	subtype[weapon_component_template] = {
	}
}

utility_component_template = {
	key = "name"
	size = <utility_slot_size>
	icon = scalar #link to a GFX_ link defined under /interface
	icon_frame = int
	power = float
	cost = float ###minerals
	ship_behavior = <ship_behavior>  
	hidden = bool
	should_ai_use = bool
	ftl = bool
	sensor_range = int
	hyperlane_range = int
	size_restriction =  <shipsize>
	class_restriction = <shipsize_class>
	component_set = <component_set>
	upgrades_to = <utility_component_template>
	prerequisites = { <technology> }
	hostile_aura = {
		<aura_effect>
	}
	friendly_aura = {
		<aura_effect>
	}
	valid_for_country = { ###scope = country
		## cardinality = 0..1
		weight = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
	modifier = { 
		## cardinality = 0..1
		alias_name[modifier] = alias_match_left[modifier]
	}
	ship_modifier = { 
		## cardinality = 0..1
		alias_name[modifier] = alias_match_left[modifier]
	}
	ai_weight = {
		## cardinality = 0..1
		weight = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
} 
 
aura_effect = {
	name = "name"
	radius = int
	apply_on = ###accepts fleets or ships
	stack_info = {
		id = #unique or shared key
		priority = int
	}
   
	modifier = { 
		## cardinality = 0..1
		alias_name[modifier] = alias_match_left[modifier]
	}
   
	graphics = { 
		area_effect = { 
			entity = #tied to defined entites under gfx
			dynamic_scale = bool
		}
		ship_effect = { 
			entity = #tied to defined entites under gfx
			dynamic_scale = bool
		}
	}
}

weapon_component_template = {
	key = "name"
	type = <weapon_type>
	projectile_gfx = scalar #tied to defined entites under gfx
	tags = { <component_tags> }
	ai_tags = { 
		## cardinality = 0..1
		<component_tags>
	}	
	color = <hsv>
	ai_tag_weight = int
	entity = scalar #tied to defined entites under gfx
	size = <weapon_slot_size>
	icon = scalar #link to a GFX_ link defined under /interface
	icon_frame = int
	power = float
	cost = float ###minerals
	ship_behavior = <ship_behavior>  
	hidden = bool
	should_ai_use = bool
	size_restriction =  <shipsize>
	class_restriction = <shipsize_class>
	component_set = <component_set>
	use_ship_kill_target = bool
	firing_arc = float
	min_range = float
	prio_projectile = bool
	static_rotation = bool #link to a GFX_ link defined under /interface
	planet_destruction_gfx = scalar
	upgrades_to = <weapon_component_template>
	prerequisites = { <technology> }
	valid_for_country = { ###scope = country
		## cardinality = 0..1
		weight = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
	ai_weight = {
		## cardinality = 0..1
		weight = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
	
	#these are optional, vanilla uses an .csv file to create these
	damage = { min = float max = float }
	shield_damage = float
	shield_penetration = float
	hull_damage = float
	armor_damage = float
	armor_penetration = float
	windup = { min = int max = int }
	total_fire_time = int
	range = int
	accuracy = float
	tracking = float
	#missiles only
	missile_speed = float
	missile_evasion = float
	missile_health = float
	missile_armor = float
	missile_shield = float
	missile_retarget_range = int
}	

weapon_type = {
	subtype[instant]
	subtype[missile]
	subtype[point_defence]
	subtype[planet_killer]	
}	
weapon_slot_size = {
	subtype[extra_large]
	subtype[large]	
	subtype[medium]
	subtype[small]
	subtype[torpedo]	
	subtype[point_defence]
	subtype[planet_killer]
}

utility_slot_size = { 
	subtype[extra_large]
	subtype[large]
	subtype[medium]
	subtype[small]
	subtype[aux]
}	
