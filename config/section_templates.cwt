types = {
	type[section_template] = {
		name_field = "key"
		path = "game/common/section_templates"
	}
}

section_template = {
  key = localisation
  ## cardinality = 0..inf
  ship_size = <ship_size>
  ## cardinality = 0..inf
  #TODO section slots
  fits_on_slot = <section_slot>
  entity = scalar
  icon = scalar
  ## cardinality = 0..1
  icon_frame = int
  ## cardinality = 0..1
  should_draw_components = bool
  ## cardinality = 0..1
  cost = float
  ## cardinality = 0..1
  prerequisites = { <technology> }
  ## cardinality = 0..inf
  component_slot = {
    name = scalar
	#TODO slot size
	#slot_size = <weapon_slot_size>
	slot_size = scalar
    slot_type = enum[slot_type]
    locatorname = scalar
    ## cardinality = 0..1
	is_side_slot = bool
    ## cardinality = 0..1
	rotation = int
	## cardinality = 0..1
	position = {
		x = float
		y = float
	}
	## cardinality = 0..1
	section_instance = int
  }
  ## cardinality = 0..1
  small_utility_slots = int
  ## cardinality = 0..1
  medium_utility_slots = int
  ## cardinality = 0..1
  large_utility_slots = int
  ## cardinality = 0..1
  aux_utility_slots = int
	## cardinality = 0..1
  ai_weight = {
		## cardinality = 0..1
		weight = float
		## cardinality = 0..1
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}
enums = {
  	enum[slot_type] = {
     	strike_craft
    	weapon
   	}
	complex_enum[component_slots] = {
		path = "game/common/section_templates"
		component_slot = {
			name = enum_name
		}
	}
}
